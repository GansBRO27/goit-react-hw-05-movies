{"version":3,"file":"static/js/90.fc5a9c50.chunk.js","mappings":"qMAiDA,UA5CmB,WAAO,IAAD,IACvB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,EAAO,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KACxCC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUV,GACPW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJjB,EAASiB,GACTf,GAAU,EACX,GACJ,GAAE,CAACC,IACJ,IAAQe,EACNnB,EADMmB,MAAOC,EACbpB,EADaoB,YAAaC,EAC1BrB,EAD0BqB,aAAcC,EACxCtB,EADwCsB,WAAYC,EACpDvB,EADoDuB,SAAUC,EAC9DxB,EAD8DwB,OAG1DC,EAAQ,yCAAqCL,GAEnD,OACE,4BACE,SAAC,KAAD,CAASM,GAAIhB,EAAb,mBACA,0BACE,gBAAKiB,IAAKzB,EAASuB,EAAW,GAAIG,IAAI,cAExC,uBAAIT,KACJ,uBAAIE,KACJ,uBAAIC,KACJ,uBAAIC,IARN,OASGrB,QATH,IASGA,EAAAA,EACCsB,EAAOK,KAAI,SAAAC,GACT,OAAO,uBAAmBA,EAAMC,MAAjBD,EAAME,GACtB,KACH,SAAC,KAAD,CAASN,GAAG,OAAOf,MAAO,CAAEC,KAAMF,GAAlC,mBAGA,SAAC,KAAD,CAASgB,GAAG,UAAUf,MAAO,CAAEC,KAAMF,GAArC,sBAGA,SAAC,KAAD,MAGL,C,uJChDD,IAAMuB,EAAM,mCACL,SAASC,IACd,OAAOC,MAAM,yDAAD,OAA0DF,GACvE,CACM,SAASG,EAAWC,EAAOC,GAChC,OAAOH,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDI,EADxD,iBACsEC,GAEnF,CACM,SAASxB,EAAUkB,GACxB,OAAOG,MAAM,wCAAD,OAEuBH,EAFvB,oBAEqCC,EAFrC,mBAIb,CACM,SAASM,EAAYP,GAC1B,OAAOG,MAAM,wCAAD,OAEuBH,EAFvB,4BAE6CC,EAF7C,mBAIb,CACM,SAASO,EAAaR,GAC3B,OAAOG,MAAM,wCAAD,OAEuBH,EAFvB,4BAE6CC,EAF7C,0BAIb,C","sources":["pages/aboutMovie.jsx","servises/fetchFilms.jsx"],"sourcesContent":["import { NavLink, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchFilm } from 'servises/fetchFilms';\n\nconst AboutMovie = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoad, setIsLoad] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const bakLink = location.state?.from ?? '/';\n  useEffect(() => {\n    fetchFilm(movieId)\n      .then(response => response.json())\n      .then(data => {\n        setMovie(data);\n        setIsLoad(true);\n      });\n  }, [movieId]);\n  const { title, poster_path, release_date, popularity, overview, genres } =\n    movie;\n\n  const imageURL = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <div>\n      <NavLink to={bakLink}>BACK</NavLink>\n      <div>\n        <img src={isLoad ? imageURL : ''} alt=\"poster\" />\n      </div>\n      <p>{title}</p>\n      <p>{release_date}</p>\n      <p>{popularity}</p>\n      <p>{overview}</p>\n      {isLoad ??\n        genres.map(genre => {\n          return <p key={genre.id}>{genre.name}</p>;\n        })}\n      <NavLink to=\"cast\" state={{ from: bakLink }}>\n        Cast\n      </NavLink>\n      <NavLink to=\"reviews\" state={{ from: bakLink }}>\n        Reviews\n      </NavLink>\n      <Outlet />\n    </div>\n  );\n};\nexport default AboutMovie;\nAboutMovie.propTypes = {\n  movie: PropTypes.string,\n  isLoad: PropTypes.bool,\n};\n","const KEY = 'c209fa6cb0ce43326b8f217a57ec8985';\nexport function fetchPopularMovies() {\n  return fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n}\nexport function fetchFilms(query, page) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n}\nexport function fetchFilm(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchActors(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchReviews(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["useState","movie","setMovie","isLoad","setIsLoad","movieId","useParams","location","useLocation","console","log","bakLink","state","from","useEffect","fetchFilm","then","response","json","data","title","poster_path","release_date","popularity","overview","genres","imageURL","to","src","alt","map","genre","name","id","KEY","fetchPopularMovies","fetch","fetchFilms","query","page","fetchActors","fetchReviews"],"sourceRoot":""}