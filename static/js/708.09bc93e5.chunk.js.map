{"version":3,"file":"static/js/708.09bc93e5.chunk.js","mappings":"6OAkBA,EAhBqB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9B,OACE,wBACGD,EAAOE,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMP,GAArC,SACGI,MAFII,EAAAA,EAAAA,MAMZ,KAGN,E,kBC8CD,EAzDe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAkCH,EAAAA,EAAAA,UAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAA0BL,EAAAA,EAAAA,YAA1B,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SACzBrB,GAAWsB,EAAAA,EAAAA,MACjBC,QAAQC,IAAIxB,IACZyB,EAAAA,EAAAA,YAAU,WACHL,IAIDA,IAAUT,IACZD,EAAU,IACVI,EAAa,KAGfY,EAAAA,EAAAA,IAAWN,EAAOP,GACfc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,YAA+B,IAA5BG,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAChBrB,GAAU,SAAAsB,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IACnBlB,EAAUQ,GACVJ,EAASe,EACV,IACJ,GAAE,CAACX,EAAOT,EAAQE,IAenB,OACE,+BACE,4BACE,kBAAMoB,SAjBS,SAAAC,GACnBA,EAAEC,iBACY,KAAVf,GACFgB,MAAM,yBAER,IAAMC,EAAOH,EAAEI,cAEfnB,EAAgB,CACdC,MAAOiB,EAAKE,SAASC,YAAYC,OAEpC,EAOK,WACE,kBAAOC,KAAK,OAAOC,KAAK,iBACxB,0CAGDvB,IAAS,SAAC,EAAD,CAAcrB,OAAQA,EAAQC,SAAUA,IACjDe,EAAQ,IAAK,mBAAQ6B,QAZT,WACjB9B,GAAa,SAAAkB,GAAS,OAAIA,EAAY,CAAhB,GACvB,EAUmB,wBACd,SAAC,KAAD,QAIP,C,uJC9DD,IAAMa,EAAM,mCACL,SAASC,IACd,OAAOC,MAAM,yDAAD,OAA0DF,GACvE,CACM,SAASnB,EAAWN,EAAO4B,GAChC,OAAOD,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDzB,EADxD,iBACsE4B,GAEnF,CACM,SAASC,EAAU9C,GACxB,OAAO4C,MAAM,wCAAD,OAEuB5C,EAFvB,oBAEqC0C,EAFrC,mBAIb,CACM,SAASK,EAAY/C,GAC1B,OAAO4C,MAAM,wCAAD,OAEuB5C,EAFvB,4BAE6C0C,EAF7C,mBAIb,CACM,SAASM,EAAahD,GAC3B,OAAO4C,MAAM,wCAAD,OAEuB5C,EAFvB,4BAE6C0C,EAF7C,0BAIb,C,uDCzBM,IAkBIrC,EAAS,eAAC4C,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACrD,EAAIsD,GAWvD,OAREtD,IAFFsD,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/moviesList/bigMovieList.jsx","pages/movie.jsx","servises/fetchFilms.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nconst BigMovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        const { id, title } = movie;\n        return (\n          <li key={nanoid()}>\n            <NavLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default BigMovieList;\n","import { useState, useEffect } from 'react';\nimport BigMovieList from '../components/moviesList/bigMovieList';\nimport { fetchFilms } from '../servises/fetchFilms';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [moviePage, setMoviePage] = useState(1);\n  const [total, setTotal] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    if (query !== search) {\n      setMovies([]);\n      setMoviePage(1);\n    }\n\n    fetchFilms(query, moviePage)\n      .then(response => response.json())\n      .then(({ results, total_pages }) => {\n        setMovies(prevState => [...prevState, ...results]);\n        setSearch(query);\n        setTotal(total_pages);\n      });\n  }, [query, search, moviePage]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      alert('put movie name please');\n    }\n    const form = e.currentTarget;\n\n    setSearchParams({\n      query: form.elements.searchQuery.value,\n    });\n  };\n  const onLoadMore = () => {\n    setMoviePage(prevState => prevState + 1);\n  };\n  return (\n    <>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"searchQuery\" />\n          <button>search</button>\n        </form>\n\n        {query && <BigMovieList movies={movies} location={location} />}\n        {total > 1 && <button onClick={onLoadMore}>load more</button>}\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default Movies;\nMovies.propTypes = {\n  movies: PropTypes.array,\n  search: PropTypes.string,\n  moviePage: PropTypes.string,\n};\n","const KEY = 'c209fa6cb0ce43326b8f217a57ec8985';\nexport function fetchPopularMovies() {\n  return fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n}\nexport function fetchFilms(query, page) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n}\nexport function fetchFilm(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchActors(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchReviews(id) {\n  return fetch(\n    `\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["movies","location","map","movie","id","title","to","state","from","nanoid","useState","setMovies","search","setSearch","moviePage","setMoviePage","total","setTotal","useSearchParams","searchParams","setSearchParams","query","get","useLocation","console","log","useEffect","fetchFilms","then","response","json","results","total_pages","prevState","onSubmit","e","preventDefault","alert","form","currentTarget","elements","searchQuery","value","type","name","onClick","KEY","fetchPopularMovies","fetch","page","fetchFilm","fetchActors","fetchReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}